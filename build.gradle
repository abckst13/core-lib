buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath('org.springframework.boot:spring-boot-gradle-plugin:2.7.7')
		classpath('io.spring.gradle:dependency-management-plugin:1.0.15.RELEASE')
	}
}

plugins {
	id 'java-library'
	id 'eclipse-wtp'
	id 'java'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

eclipse {
	project {
		buildCommands.clear();
		buildCommand 'org.eclipse.jdt.core.javabuilder'
		buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
	}
	wtp {
		facet {
			file {
				facet name: 'jst.java', version: '17'
			}
		}
	}
}

group = 'kr.gscaltex.gsc.core'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

compileJava {
	options.encoding = 'UTF-8'
}

//jar {
//	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//}

configurations {
	developmentOnly
		runtimeClasspath {
			extendsFrom developmentOnly
		}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	/*
	 * [참고] API 의존성으로 해야 어플리케이션 빌드 오류가 발생하지 않음.
	 * Annotation 또는, 클래스/메소드의 정의에서 라이브러리의 클래스가 참조되는 경우
	 * 즉, 런타임시가 아닌 컴파일 타임에 참조되야 하는 경우에는 api 의존성으로 지정해야 한다.
	 * 이게 devtools에서는 에러가 안나고 수행이 되지만,
	 * 실제 gradle compileJava Task 수행시 에러가 발생한다.
	 */
	api fileTree(dir: 'libs', include: ['*.jar'])
	api 'org.springframework.boot:spring-boot-starter-web'
	api 'org.springframework.boot:spring-boot-starter-actuator'
//	api 'org.springframework.boot:spring-boot-starter-batch'
//	api 'org.springframework.boot:spring-boot-starter-data-jpa'
//	api 'org.springframework.boot:spring-boot-starter-data-redis'
	api 'org.springframework.boot:spring-boot-starter-mail'
//	api 'org.springframework.boot:spring-boot-starter-quartz'
	api 'org.springframework.boot:spring-boot-starter-validation'
//	api 'org.springframework.boot:spring-boot-starter-websocket'
	api 'org.springframework.boot:spring-boot-starter-aop'
//	api 'org.springframework.session:spring-session-data-redis'
	api 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'
	api 'org.zalando:logbook-spring-boot-starter:2.9.0'

	api 'io.springfox:springfox-boot-starter:3.0.0'
//	api 'org.springdoc:springdoc-openapi-ui:1.4.7'
	api 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
//	api 'org.flywaydb:flyway-core:6.5.5'
	api 'io.minio:minio:7.1.0'
	api 'io.jsonwebtoken:jjwt:0.9.1'
	api 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.12.3'
	api 'org.springframework.security:spring-security-crypto'	//spring-security-crypto

	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.3'
	//runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc:11.2.1.jre11'

	//runtimeOnly 'org.postgresql:postgresql'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
//	testImplementation 'org.springframework.batch:spring-batch-test:4.3.3'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//일반 단위 라이브러리
	api 'commons-jxpath:commons-jxpath:1.3'
	api 'commons-lang:commons-lang:2.6'
	api 'commons-codec:commons-codec:1.15'
	api 'commons-io:commons-io:2.8.0'
	api 'commons-net:commons-net:3.6'
	api 'commons-validator:commons-validator:1.6'
	api 'org.apache.poi:poi:3.14'
	api 'org.apache.poi:poi-ooxml:3.14'
	api 'org.apache.httpcomponents:httpclient:4.5.3'
	api 'org.apache.commons:commons-lang3:3.12.0'
	api 'org.apache.commons:commons-crypto:1.1.0'
	api 'org.apache.commons:commons-pool2:2.11.1'
	api 'com.googlecode.json-simple:json-simple:1.1.1'
	api 'joda-time:joda-time:2.10.6'
	api 'org.modelmapper:modelmapper:2.3.0'
	api 'org.yaml:snakeyaml:1.26'
//	api 'io.micrometer:micrometer-registry-prometheus'


	// Spring Boot Dependencies
	implementation 'org.springframework.boot:spring-boot-starter'

	// Autoconfigure Dependencies
	implementation 'org.springframework.boot:spring-boot-autoconfigure'
	implementation 'org.springframework.boot:spring-boot-autoconfigure-processor'

	// For Generate meta data Dependencies
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// Jasypt Spring Boot Starter 3.0.3
	api 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'

	//Bean Validation API 2.0.1.Final
	implementation 'javax.validation:validation-api:2.0.1.Final'

	//XStream Core 1.4.17
	implementation 'com.thoughtworks.xstream:xstream:1.4.17'

	//Joda Time 2.10.10
	implementation 'joda-time:joda-time:2.10.10'

	//Apache Http Client 3.1
	implementation 'commons-httpclient:commons-httpclient:3.1'

	//Apache Commons Lang 2.6.0
	implementation 'commons-lang:commons-lang:2.6'

	//Apache Commons Collections 3.2.2
	implementation 'commons-collections:commons-collections:3.2.2'

	//Spring Boot Starter Integration
	implementation 'org.springframework.boot:spring-boot-starter-integration'

	//Spring Integration Core
	implementation 'org.springframework.integration:spring-integration-core'

	//Spring Integration IP
	implementation 'org.springframework.integration:spring-integration-ip'

	//Spring Integration HTTP
	implementation 'org.springframework.integration:spring-integration-http'

	//Spring JDBC
	implementation 'org.springframework:spring-jdbc'

	//Spring Boot Starter Cache
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	//Ehcache
	implementation 'net.sf.ehcache:ehcache:2.10.9.2'

	//JMS API 2.0.1
	implementation 'javax.jms:javax.jms-api:2.0.1'

	//commons-pool
	implementation 'commons-pool:commons-pool:1.6'

	//Jsonschema2pojo for Code Generation
	implementation 'org.jsonschema2pojo:jsonschema2pojo-core:1.1.1'

	//jaxb
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'

}

bootJar.enabled = false